ylab(paste0("PC2 (", prop[2]*100, "% of variance)"))
dds <- DESeqDataSetFromMatrix(countData = countMatrix, # Count matrix
colData = studyDesign, # - indicate what the design matrix is
design = ~ Condition # - and then what column that 'splits' the data
# in this case the wto values in 'Minute': min0 and min30
)
dds <- DESeq(dds)
res <- results(dds, lfcThreshold = 0.25, alpha = 0.05)
res_test <- results(dds, alpha = 0.05)
summary(res)
summary(res_test)
dds_c <- DESeqDataSetFromMatrix(countData = countMatrix,
colData = studyDesign_corrected,
design = ~ Condition
)
dds_c <- DESeq(dds_c)
res_c <- results(dds_c, lfcThreshold = 0.25, alpha = 0.05)
summary(res_c)
res_c %>%
as.data.frame %>%
rownames_to_column("Gene") %>%
as_tibble %>%
#filter(abs(log2FoldChange) > 0.25 & padj < 0.05) %>%
mutate(DEstatus = abs(log2FoldChange) > 0.25 & padj < 0.05) %>%
ggplot(aes(x=baseMean, y=log2FoldChange, col=DEstatus)) +
geom_point(alpha=0.5) + geom_smooth(col="red") +
scale_x_log10() +
geom_hline(yintercept = 0, alpha = 0.75, color="blue") +
theme_bw()
#plotMA(res_c)
res_c %>%
as.data.frame %>%
rownames_to_column("Gene") %>%
arrange(desc(log2FoldChange)) %>%
filter(padj < 0.05) %>%
head(10)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
arrange(log2FoldChange) %>%
filter(padj < 0.05) %>%
head(10)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) %>%
arrange(desc(log2FoldChange)) -> res_diabetes
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) -> res_significant
wilcox.test(res_diabetes$log2FoldChange, res_significant$log2FoldChange)
#hist(res_diabetes$log2FoldChange)
#hist(res_significant$log2FoldChange)
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
wilcox.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
qqnorm(rnorm(1000))
qqnorm(res_diabetes_nofilter$log2FoldChange)
qqnorm(res_nofilter$log2FoldChange)
A <- sort(runif(10, min = 1, max=10))
B <- A[7:10] #runif(30, min=1, max=3)
wilcox.test(A, B)
wilcox.test(c(A,B), B)
dds_c <- DESeqDataSetFromMatrix(countData = countMatrix,
colData = studyDesign_corrected,
design = ~ Condition
)
dds_c <- DESeq(dds_c)
res_c <- results(dds_c, lfcThreshold = 0.25, alpha = 0.05)
summary(res_c)
dds <- DESeqDataSetFromMatrix(countData = countMatrix, # Count matrix
colData = studyDesign, # - indicate what the design matrix is
design = ~ Condition # - and then what column that 'splits' the data
# in this case the wto values in 'Minute': min0 and min30
)
dds <- DESeq(dds)
res <- results(dds, lfcThreshold = 0.25, alpha = 0.05)
summary(res)
dds_c <- DESeqDataSetFromMatrix(countData = countMatrix,
colData = studyDesign_corrected,
design = ~ Condition
)
dds_c <- DESeq(dds_c)
res_c <- results(dds_c, lfcThreshold = 0.25, alpha = 0.05)
summary(res_c)
dds <- DESeqDataSetFromMatrix(countData = countMatrix, # Count matrix
colData = studyDesign, # - indicate what the design matrix is
design = ~ Condition # - and then what column that 'splits' the data
# in this case the wto values in 'Minute': min0 and min30
)
dds <- DESeq(dds)
res <- results(dds, lfcThreshold = 0.25, alpha = 0.05)
summary(res)
dds_c <- DESeqDataSetFromMatrix(countData = countMatrix,
colData = studyDesign_corrected,
design = ~ Condition
)
dds_c <- DESeq(dds_c)
res_c <- results(dds_c, lfcThreshold = 0.25, alpha = 0.05)
summary(res_c)
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
sd(res_diabetes_nofilter$log2FoldChange)
sd(res_nofilter$log2FoldChang)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
data = matrix(data=c(1,0,0,0,0,7, 5,6,8,8,5,8), nrow=6)
colnames(data) = c("handful", "bag")
rownames(data) = c("red", "yellow", "orange", "green", "brown", "blue")
data
fisher.test(data)
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("In List", "Rest"),
c("In Family", "Rest")))
m
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
m
fisher.test(m, alternative = "greater")
normalize.quantile(res_c)
normalize.quantiles(res_c)
library(preprocessCore)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange, alternative = "greater")
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
?t.test
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange, alternative = "greater")
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
hist(res_diabetes$log2FoldChange)
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
fisher.test(m, alternative = "greater")
wilcox.test(res_diabetes$log2FoldChange, res_significant$log2FoldChange)
wilcox.test(res_diabetes$log2FoldChange, res_significant$log2FoldChange, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) %>%
arrange(desc(log2FoldChange)) -> res_diabetes
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) -> res_significant
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
fisher.test(m, alternative = "greater")
wilcox.test(res_diabetes$log2FoldChange, res_significant$log2FoldChange, alternative = "greater")
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
fisher.test(m, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) %>%
arrange(desc(log2FoldChange)) -> res_diabetes
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) -> res_significant
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k),
2, 2, dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
fisher.test(m, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange, alternative = "greater")
bedtools intersect -a refseq -b refseq -f 0.2 -S -u > overlap-refseq-su
pheatmap(top10_percent, show_rownames = F, annotation_col = column_to_rownames(studyDesign, "Sample"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(pheatmap, quietly = T)
library(DESeq2, quietly = T)
overlap_size <- 6257
refseq_size <- 77810
overlap_size/refseq_size
overlap_count <- read.table("overlap-refseq-s-count")
overlap_count %>%
filter(V13 != 0) %>%
ggplot(aes(x=V13)) + geom_histogram() + theme_bw() +
xlab("Number of overlaps")
overlap_count %>%
arrange(desc(V13)) %>%
head(1) %>%
select(V1, V2, V3) %>%
write_tsv("most_overlap", col_names = F)
rrp40_sense <- read_tsv("question2_data/Hw4_CAGE_rrp40_senseStrand.txt")
cntl_sense <- read_tsv("question2_data/Hw4_CAGE_Ctrl_senseStrand.txt")
rrp40_antisense <- read_tsv("question2_data/Hw4_CAGE_rrp40_antisenseStrand.txt")
cntl_antisense <- read_tsv("question2_data/Hw4_CAGE_Ctrl_antisenseStrand.txt")
get_fc_df_tidy <- function(gene, control, strand){
gene %>% gather("Position", "Gene", -genome.pos) -> gene
control %>%
gather("Position", "Cntrl", -genome.pos) %>%
cbind(Gene = gene$Gene) %>%
mutate(FoldChange = Gene/Cntrl) %>%
group_by(Position) %>%
summarize(AvgFoldChange = mean(FoldChange)) %>%
mutate(Position = as.numeric(str_extract(Position, "[0-9]+"))) %>%
mutate(Strand = rep(strand)) -> fc_df
return(fc_df)
}
sense <- get_fc_df_tidy(rrp40_sense, cntl_sense, "Sense")
antisense <- get_fc_df_tidy(rrp40_antisense, cntl_antisense, "Antisense")
sense %>%
rbind(antisense) %>%
ggplot(aes(x=Position, y=AvgFoldChange, col=Strand)) +
geom_line() + theme_bw()
studyDesign <- read_tsv("question3_data/studyDesign.tsv")
countMatrix <- read.table("question3_data/countMatrix.tsv")
normalizedMatrix <- read.table("question3_data/normalizedMatrix.tsv")
diabetesGene <- read_tsv("question3_data/diabetesGenes.tsv")
normalizedMatrix %>%
mutate(variance = apply(normalizedMatrix, 1 ,var)) %>%
arrange(desc(variance)) %>%
head(dim(normalizedMatrix)[1] * 0.1) %>%
select(-variance)-> top10_percent
pheatmap(top10_percent, show_rownames = F, annotation_col = column_to_rownames(studyDesign, "Sample"))
normalizedMatrix %>%
as.matrix %>%
t %>%
prcomp(center=T) -> normalizedMatrixPCR
prop <- summary(normalizedMatrixPCR)$importance[2,]
normalizedMatrixPCR$x %>%
as.data.frame() %>%
mutate("Sample" = rownames(normalizedMatrixPCR$x)) %>%
mutate("Condition" = studyDesign$Condition) %>%
ggplot(aes(x=PC1, y=PC2, col=Condition, label=Sample)) +
geom_point() + geom_text() + theme_bw() +
xlab("PC1 (26.15% of variance)") +
ylab("PC2 (12.36% of variance)")
studyDesign_corrected <- studyDesign
studyDesign_corrected[c(18,6),]$Condition <- studyDesign[c(6,18),]$Condition #Swap Conidtion for Sample 6 and 18 (careful, swaps everytime you run it)
normalizedMatrixPCR$x %>%
as.data.frame() %>%
mutate("Sample" = rownames(normalizedMatrixPCR$x)) %>%
#as.tibble %>%
#rownames_to_column("Sample") %>%
mutate("Condition" = studyDesign_corrected$Condition) %>%
ggplot(aes(x=PC1, y=PC2, col=Condition, label=Sample)) +
geom_point() + geom_text() + theme_bw() +
xlab(paste0("PC1 (", prop[1]*100, "% of variance)")) +
ylab(paste0("PC2 (", prop[2]*100, "% of variance)"))
dds <- DESeqDataSetFromMatrix(countData = countMatrix, # Count matrix
colData = studyDesign, # - indicate what the design matrix is
design = ~ Condition # - and then what column that 'splits' the data
# in this case the wto values in 'Minute': min0 and min30
)
dds <- DESeq(dds)
res <- results(dds, lfcThreshold = 0.25, alpha = 0.05)
summary(res)
dds_c <- DESeqDataSetFromMatrix(countData = countMatrix,
colData = studyDesign_corrected,
design = ~ Condition
)
dds_c <- DESeq(dds_c)
res_c <- results(dds_c, lfcThreshold = 0.25, alpha = 0.05)
summary(res_c)
res_c %>%
as.data.frame %>%
rownames_to_column("Gene") %>%
as_tibble %>%
mutate(DEstatus = abs(log2FoldChange) > 0.25 & padj < 0.05) %>%
ggplot(aes(x=baseMean, y=log2FoldChange, col=DEstatus)) +
geom_point(alpha=0.5) + geom_smooth(col="red") +
scale_x_log10() +
geom_hline(yintercept = 0, alpha = 0.75, color="blue") +
theme_bw()
res_c %>%
as.data.frame %>%
rownames_to_column("Gene") %>%
arrange(desc(log2FoldChange)) %>%
filter(padj < 0.05) %>%
head(10)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
arrange(log2FoldChange) %>%
filter(padj < 0.05) %>%
head(10)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) %>%
arrange(desc(log2FoldChange)) -> res_diabetes
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) %>%
filter(padj < 0.05) %>%
filter(abs(log2FoldChange) > 0.25) -> res_significant
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k), 2, 2,
dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
fisher.test(m, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
t.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange, alternative = "greater")
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(padj < 0.05) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
wilcox.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(pvalue < 0.05) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(pvalue < 0.05) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
wilcox.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(Gene %in% diabetesGene$Gene) %>%
filter(padj < 0.05) %>%
arrange(desc(log2FoldChange)) -> res_diabetes_nofilter
res_c %>%
as.data.frame() %>%
rownames_to_column("Gene") %>%
filter(padj < 0.05) %>%
filter(!(Gene %in% diabetesGene$Gene)) -> res_nofilter
wilcox.test(res_diabetes_nofilter$log2FoldChange, res_nofilter$log2FoldChange)
hist(res_diabetes_nofilter$log2FoldChange)
hist(res_nofilter$log2FoldChange)
mean(res_diabetes_nofilter$log2FoldChange)
mean(res_nofilter$log2FoldChang)
knitr::opts_chunk$set(echo = TRUE)
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k), 2, 2,
dimnames = list(c("Diabetes DE", "Diabetes Not DE"),
c("DE genes", "Not DE genes")))
m
fisher.test(m, alternative = "greater")
N <- length(res_c$log2FoldChange)
K <- length(res_significant$log2FoldChange)
n <- length(diabetesGene$Gene)
k <- length(res_diabetes$log2FoldChange)
#phyper(q=k-1, m=K, n=N-K, k=n, lower.tail = F)
m <- matrix(c(k, K - k, n - k, N - K - n + k), 2, 2,
dimnames = list(c("Diabetes", "Not Diabetes"),
c("DE genes", "Not DE genes")))
m
fisher.test(m, alternative = "greater")
